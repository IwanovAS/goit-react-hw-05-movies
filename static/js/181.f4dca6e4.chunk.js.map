{"version":3,"file":"static/js/181.f4dca6e4.chunk.js","mappings":"oOAGMA,EACJ,8EAkCF,EAhCa,WACX,IACA,ECL6B,SAAAC,GAC7B,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,GACXE,EAAS,MAETE,EAAAA,GAAoBT,GACjBU,MAAK,SAAAC,GACJR,EAAgBQ,GAChBN,GAAW,EACZ,IACAO,OAAM,SAAAC,GACLN,EAASM,GACTR,GAAW,EACZ,GACJ,GAAE,CAACL,IACG,CAAEE,aAAAA,EAAcE,QAAAA,EAASE,MAAAA,EACjC,CDf0BQ,EADLC,EAAAA,EAAAA,MAAZf,SACAE,EAAR,EAAQA,aAER,OACE,0BACE,wBACGA,EAAac,KAAI,SAAAC,GAChB,OACE,2BACE,gBACEC,IACED,EAAKE,aAAL,0DACuDF,EAAKE,cACxDpB,EAENqB,QAAS,SAAAC,GACPA,EAAEC,OAAOJ,IAAMnB,CAChB,EACDwB,MAAO,IACPC,IAAKP,EAAKQ,QAEZ,uBAAIR,EAAKQ,QACT,yBAAG,cAAYR,EAAKS,eAdbT,EAAKU,GAiBjB,OAIR,C,+LElCDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,4CAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,6BAAgCC,IAD9B,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,QAAQjB,KAAI,YAC/B,MAAO,CACLW,GAFgD,EAAhBA,GAGhCO,MAHgD,EAAZA,MAKvC,KAPwB,2CAAH,qDAUXC,EAAY,mCAAG,WAAMC,GAAN,uFACHR,EAAAA,EAAAA,IAAA,uBACLC,EADK,kBACYO,EADZ,2BADG,cACpBL,EADoB,yBAInBA,EAASC,KAAKC,QAAQjB,KAAI,YAC/B,MAAO,CACLW,GAFgD,EAAhBA,GAGhCO,MAHgD,EAAZA,MAKvC,KATyB,2CAAH,sDAYZG,EAAe,mCAAG,WAAMrC,GAAN,uFACN4B,EAAAA,EAAAA,IAAA,iBACX5B,GADW,OACD6B,EADC,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfM,EAAe,mCAAG,WAAMC,GAAN,uFACNX,EAAAA,EAAAA,IAAA,iBACXW,EADW,mBACQV,EADR,oBADM,cACvBE,EADuB,yBAIvBA,EAASC,KAAKf,KAAKD,KACvB,YACE,MAAO,CACLS,KAFuC,EAAxCA,KAGCC,UAHuC,EAAlCA,UAILP,aAJuC,EAAvBA,aAKhBQ,GALuC,EAATA,GAOjC,KAZ0B,2CAAH,sDAefa,EAAgB,mCAAG,WAAMD,GAAN,uFACPX,EAAAA,EAAAA,IAAA,iBACXW,EADW,mBACQV,EADR,2BADO,cACxBE,EADwB,yBAIvBA,EAASC,KAAKC,QAAQjB,KAAI,YAC/B,MAAO,CACLyB,OAF0D,EAA1BA,OAGhCC,QAH0D,EAAlBA,QAIxCf,GAJ0D,EAATA,GAMpD,KAV6B,2CAAH,qD","sources":["components/Cast/Cast.jsx","utils/hooks/useMovieCredits.jsx","utils/api/apiMoviedb.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useMovieCredits } from 'utils/hooks/useMovieCredits';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const { movieCredits } = useMovieCredits(movieId);\n\n  return (\n    <div>\n      <ul>\n        {movieCredits.map(cast => {\n          return (\n            <li key={cast.id}>\n              <img\n                src={\n                  cast.profile_path\n                    ? `https://image.tmdb.org/t/p/w300_and_h450_bestv2/${cast.profile_path}`\n                    : defaultImg\n                }\n                onError={e => {\n                  e.target.src = defaultImg;\n                }}\n                width={250}\n                alt={cast.name}\n              />\n              <p>{cast.name}</p>\n              <p>Character: {cast.character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import * as API from '../api/apiMoviedb';\nimport { useEffect, useState } from 'react';\n\nexport const useMovieCredits = movieId => {\n  const [movieCredits, setMovieCredits] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n\n    API.getMovieCredits(movieId)\n      .then(ret => {\n        setMovieCredits(ret);\n        setLoading(false);\n      })\n      .catch(err => {\n        setError(err);\n        setLoading(false);\n      });\n  }, [movieId]);\n  return { movieCredits, loading, error };\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=f0775f3489a93860120578755f2ec813';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits${API_KEY}&language=en-US`\n  );\n return response.data.cast.map(\n    ({ name, character, profile_path, id }) => {\n      return {\n        name,\n        character,\n        profile_path,\n        id,\n      };\n    });\n};\n\nexport const getMoviesReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n"],"names":["defaultImg","movieId","useState","movieCredits","setMovieCredits","loading","setLoading","error","setError","useEffect","API","then","ret","catch","err","useMovieCredits","useParams","map","cast","src","profile_path","onError","e","target","width","alt","name","character","id","axios","API_KEY","getTrending","response","data","results","title","searchMovies","inputValue","getMovieDetails","getMovieCredits","moviesId","getMoviesReviews","author","content"],"sourceRoot":""}