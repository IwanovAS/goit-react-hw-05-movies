{"version":3,"file":"static/js/722.4f8a11e8.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/TrendingList/TrendingList.module.css?033c","components/TrendingList/TrendingList.jsx","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","utils/api/apiMoviedb.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TrendingList_list__7xRuf\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './TrendingList.module.css'\n\nexport const TrendingList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li className={css.list} key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"SearchForm_input__HOxJo\",\"searchBtn\":\"SearchForm_searchBtn__rp2a7\"};","import css from './SearchForm.module.css';\nimport { useState } from 'react';\n\nexport const SearchForm = ({ setSearchParams }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          className={css.input}\n          type=\"text\"\n          placeholder=\"Movie name ...\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n        ></input>\n        <button className={css.searchBtn} type=\"submit\">\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","import { SearchForm } from 'components/SearchForm/SearchForm';\nimport { TrendingList } from 'components/TrendingList/TrendingList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport * as API from '../utils/api/apiMoviedb';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieTitle = searchParams.get('query');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (movieTitle) {\n      setLoading(true);\n      API.searchMovies(movieTitle)\n        .then(ret => {\n          setMovies(ret);\n          setLoading(false);\n        })\n\n        .catch(error => {\n          console.error(error);\n          setLoading(false);\n        });\n    }\n  }, [movieTitle]);\n\n  return (\n    <div>\n      <SearchForm setSearchParams={setSearchParams} />\n      {loading ? ( <Loader /> ) : ( <TrendingList movies={movies} /> )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=f0775f3489a93860120578755f2ec813';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits${API_KEY}&language=en-US`\n  );\n return response.data.cast.map(\n    ({ name, character, profile_path, id }) => {\n      return {\n        name,\n        character,\n        profile_path,\n        id,\n      };\n    });\n};\n\nexport const getMoviesReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n"],"names":["TrendingList","movies","location","useLocation","map","movie","className","css","to","id","state","from","title","SearchForm","setSearchParams","useState","query","setQuery","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","setMovies","useSearchParams","searchParams","movieTitle","get","loading","setLoading","useEffect","API","then","ret","catch","error","console","Loader","axios","API_KEY","getTrending","response","data","results","searchMovies","inputValue","getMovieDetails","movieId","getMovieCredits","moviesId","cast","name","character","profile_path","getMoviesReviews","author","content"],"sourceRoot":""}