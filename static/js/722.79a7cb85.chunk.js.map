{"version":3,"file":"static/js/722.79a7cb85.chunk.js","mappings":"2LACA,EAAuB,2B,SCEVA,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,0BACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,eAAIC,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,EAAMI,IAAMC,MAAO,CAAEC,KAAMT,GAAhD,SACGG,EAAMO,SAFmBP,EAAMI,GADrB,OAUxB,C,mHCjBD,EAAwB,0BAAxB,EAA8D,8B,SCKjDI,EAAa,WACxB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAeA,OAPAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAaH,EAAaI,IAAI,SAChCD,GACFE,EAAAA,GAAiBF,GAAYG,MAAK,SAAAC,GAAG,OAAIT,EAAUS,EAAd,GAExC,GAAE,CAACP,KAGF,4BACE,kBAAMQ,SAfW,SAAAC,GACnBR,EAAgB,CAAES,MAAOD,EAAEE,OAAO,GAAGC,QACrCH,EAAEI,gBAEH,EAWG,WACE,kBAAOxB,UAAWC,EAAWwB,KAAK,OAAOC,YAAY,oBACrD,mBAAQ1B,UAAWC,EAAewB,KAAK,SAAvC,SAAgD,eAElD,SAAC/B,EAAA,EAAD,CAAcC,OAAQA,MAG3B,EC1BD,EAJe,WACb,OAAO,SAACY,EAAD,GACR,C,+LCFDoB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,4CAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,6BAAgCC,IAD9B,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,QAAQlC,KAAI,YAC/B,MAAO,CACLK,GAFgD,EAAhBA,GAGhCG,MAHgD,EAAZA,MAKvC,KAPwB,2CAAH,qDAUX2B,EAAY,mCAAG,WAAMC,GAAN,uFACHP,EAAAA,EAAAA,IAAA,uBACLC,EADK,kBACYM,EADZ,2BADG,cACpBJ,EADoB,yBAInBA,EAASC,KAAKC,QAAQlC,KAAI,YAC/B,MAAO,CACLK,GAFgD,EAAhBA,GAGhCG,MAHgD,EAAZA,MAKvC,KATyB,2CAAH,sDAYZ6B,EAAe,mCAAG,WAAMC,GAAN,uFACNT,EAAAA,EAAAA,IAAA,iBACXS,GADW,OACDR,EADC,oBADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfM,EAAe,mCAAG,WAAMC,GAAN,uFACNX,EAAAA,EAAAA,IAAA,iBACXW,EADW,mBACQV,EADR,oBADM,cACvBE,EADuB,yBAKtBA,EAASC,KAAKQ,KAAKzC,KAAI,YAC5B,MAAO,CACL0C,KAFqE,EAAxCA,KAG7BC,UAHqE,EAAlCA,UAInCC,aAJqE,EAAvBA,aAK9CvC,GALqE,EAATA,GAO/D,KAZ4B,2CAAH,sDAefwC,EAAgB,mCAAG,WAAML,GAAN,uFACPX,EAAAA,EAAAA,IAAA,iBACXW,EADW,mBACQV,EADR,2BADO,cACxBE,EADwB,yBAIvBA,EAASC,KAAKC,QAAQlC,KAAI,YAC/B,MAAO,CACL8C,OAF0D,EAA1BA,OAGhCC,QAH0D,EAAlBA,QAIxC1C,GAJ0D,EAATA,GAMpD,KAV6B,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/TrendingList/TrendingList.module.css?033c","components/TrendingList/TrendingList.jsx","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","utils/api/apiMoviedb.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TrendingList_list__7xRuf\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './TrendingList.module.css'\n\nexport const TrendingList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li className={css.list} key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"SearchForm_input__HOxJo\",\"searchBtn\":\"SearchForm_searchBtn__rp2a7\"};","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { TrendingList } from 'components/TrendingList/TrendingList';\nimport * as API from '../../utils/api/apiMoviedb';\nimport css from './SearchForm.module.css';\n\nexport const SearchForm = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleSubmit = e => {\n    setSearchParams({ query: e.target[0].value });\n    e.preventDefault();\n    return;\n  };\n\n  useEffect(() => {\n    const movieTitle = searchParams.get('query');\n    if (movieTitle) {\n      API.searchMovies(movieTitle).then(ret => setMovies(ret));\n    }\n  }, [searchParams]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input className={css.input} type=\"text\" placeholder=\"Movie name ...\"></input>\n        <button className={css.searchBtn} type=\"submit\">Search</button>\n      </form>\n      <TrendingList movies={movies} />\n    </div>\n  );\n};\n\nexport default SearchForm;\n","import { SearchForm } from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  return <SearchForm />;\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=f0775f3489a93860120578755f2ec813';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getMoviesReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n"],"names":["TrendingList","movies","location","useLocation","map","movie","className","css","to","id","state","from","title","SearchForm","useState","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","movieTitle","get","API","then","ret","onSubmit","e","query","target","value","preventDefault","type","placeholder","axios","API_KEY","getTrending","response","data","results","searchMovies","inputValue","getMovieDetails","movieId","getMovieCredits","moviesId","cast","name","character","profile_path","getMoviesReviews","author","content"],"sourceRoot":""}