{"version":3,"file":"static/js/778.0dafce9f.chunk.js","mappings":"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","sources":["pages/MovieDetailsPage.jsx","utils/hooks/useMovieDetails.jsx","utils/api/apiMoviedb.jsx"],"sourcesContent":["import {\n  Outlet,\n  Link,\n  useParams,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { useMovieDetails } from 'utils/hooks/useMovieDetails';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const { movieDetails, loading, error } = useMovieDetails(movieId);\n\n  const location = useLocation();\n  const navigate = useNavigate();\n  const handleGoBack = () => {\n    navigate(location.state.from);\n  };\n\n  if (loading) {\n    return <Loader />\n  }\n\n  if (error) {\n    return <p>Something went wrong</p>\n  }\n\n  return (\n    <div>\n      <button type=\"button\" onClick={handleGoBack}>\n        Go back\n      </button>\n      <h2>\n        {movieDetails.title} (\n        {movieDetails.release_date\n          ? movieDetails.release_date.substring(0, 4)\n          : ''}\n        )\n      </h2>\n\n      <img\n        src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${movieDetails.poster_path}`}\n        alt=\"{movieDetails.original_title}\"\n      />\n\n      <p>\n        User Score:{' '}\n        {movieDetails.vote_average\n          ? Math.fround(movieDetails.vote_average * 10).toFixed(0)\n          : ''}\n        %\n      </p>\n      <h3>Overview</h3>\n      <p>{movieDetails.overview}</p>\n\n      <h4>Genres</h4>\n      <p>\n        {movieDetails.genres\n          ? movieDetails.genres.map(genre => genre.name).join(' ')\n          : ''}\n      </p>\n\n      <p>Additional information</p>\n\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: location.state.from }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: location.state.from }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import * as API from '../api/apiMoviedb';\nimport { useEffect, useState } from 'react';\n\nexport const useMovieDetails = movieId => {\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n\n    API.getMovieDetails(movieId)\n      .then(movieDetailsReturnedFromApi => {\n        setMovieDetails(movieDetailsReturnedFromApi);\n        setLoading(false);\n      })\n      .catch(err => {\n        setError(err);\n        setLoading(false);\n      });\n  }, [movieId]);\n  return { movieDetails, loading, error };\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=f0775f3489a93860120578755f2ec813';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  const movieData = response.data;\n  if (!movieData.poster_path) {\n    movieData.poster_path = defaultImg;\n  }\n  return movieData;\n};\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits${API_KEY}&language=en-US`\n  );\n  const credits = response.data.cast.map(\n    ({ name, character, profile_path, id }) => {\n      if (!profile_path) {\n        profile_path = defaultImg;\n      }\n\n      return {\n        name,\n        character,\n        profile_path,\n        id,\n      };\n    });\n\n  return credits;\n};\n\nexport const getMoviesReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n"],"names":["movieId","useState","movieDetails","setMovieDetails","loading","setLoading","error","setError","useEffect","API","then","movieDetailsReturnedFromApi","catch","err","useMovieDetails","useParams","location","useLocation","navigate","useNavigate","Loader","type","onClick","state","from","title","release_date","substring","src","poster_path","alt","vote_average","Math","fround","toFixed","overview","genres","map","genre","name","join","to","axios","API_KEY","defaultImg","getTrending","response","data","results","id","searchMovies","inputValue","getMovieDetails","movieData","getMovieCredits","moviesId","credits","cast","character","profile_path","getMoviesReviews","author","content"],"sourceRoot":""}