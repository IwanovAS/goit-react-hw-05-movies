{"version":3,"file":"static/js/933.d065036c.chunk.js","mappings":"2LACA,EAAuB,2B,SCEVA,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,0BACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,eAAIC,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,EAAMI,IAAMC,MAAO,CAAEC,KAAMT,GAAhD,SACGG,EAAMO,SAFmBP,EAAMI,GADrB,OAUxB,C,6HCHD,EAXiB,WACf,MCF6B,WAC7B,OAAoCI,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,GACXE,EAAS,MAETE,EAAAA,KACGC,MAAK,SAAAC,GACJR,EAAUQ,GACVN,GAAW,EACZ,IACAO,OAAM,SAAAC,GACLN,EAASM,GACTR,GAAW,EACZ,GACJ,GAAE,IACI,CAAEH,eAAAA,EAAgBE,QAAAA,EAASE,MAAAA,EACnC,CDlB4CQ,GAAnCZ,EAAR,EAAQA,eAAgBE,EAAxB,EAAwBA,QAASE,EAAjC,EAAiCA,MACjC,OACE,2BACGF,IAAW,SAACW,EAAAA,OAAD,IACXT,IAAS,uBAAG,0BACXF,IAAYE,IAAS,SAAClB,EAAA,EAAD,CAAcC,OAAQa,MAGlD,C,+LEXDc,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,4CAEVC,EACJ,8EAEWC,EAAW,mCAAG,oGACFH,EAAAA,EAAAA,IAAA,6BAAgCC,IAD9B,cACnBG,EADmB,yBAElBA,EAASC,KAAKC,QAAQ9B,KAAI,YAC/B,MAAO,CACLK,GAFgD,EAAhBA,GAGhCG,MAHgD,EAAZA,MAKvC,KAPwB,2CAAH,qDAUXuB,EAAY,mCAAG,WAAMC,GAAN,uFACHR,EAAAA,EAAAA,IAAA,uBACLC,EADK,kBACYO,EADZ,2BADG,cACpBJ,EADoB,yBAInBA,EAASC,KAAKC,QAAQ9B,KAAI,YAC/B,MAAO,CACLK,GAFgD,EAAhBA,GAGhCG,MAHgD,EAAZA,MAKvC,KATyB,2CAAH,sDAYZyB,EAAe,mCAAG,WAAMC,GAAN,yFACNV,EAAAA,EAAAA,IAAA,iBACXU,GADW,OACDT,EADC,oBADM,cACvBG,EADuB,QAIvBO,EAAYP,EAASC,MACZO,cACbD,EAAUC,YAAcV,GANG,kBAQtBS,GARsB,2CAAH,sDAWfE,EAAe,mCAAG,WAAMC,GAAN,yFACNd,EAAAA,EAAAA,IAAA,iBACXc,EADW,mBACQb,EADR,oBADM,cACvBG,EADuB,OAIvBW,EAAUX,EAASC,KAAKW,KAAKxC,KACjC,YAA4C,IAAzCyC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,aAActC,EAAS,EAATA,GAKhC,OAJKsC,IACHA,EAAejB,GAGV,CACLe,KAAAA,EACAC,UAAAA,EACAC,aAAAA,EACAtC,GAAAA,EAEH,IAhB0B,kBAkBtBkC,GAlBsB,2CAAH,sDAqBfK,EAAgB,mCAAG,WAAMN,GAAN,uFACPd,EAAAA,EAAAA,IAAA,iBACXc,EADW,mBACQb,EADR,2BADO,cACxBG,EADwB,yBAIvBA,EAASC,KAAKC,QAAQ9B,KAAI,YAC/B,MAAO,CACL6C,OAF0D,EAA1BA,OAGhCC,QAH0D,EAAlBA,QAIxCzC,GAJ0D,EAATA,GAMpD,KAV6B,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/TrendingList/TrendingList.module.css?033c","components/TrendingList/TrendingList.jsx","pages/HomePage.jsx","utils/hooks/useTrendingList.jsx","utils/api/apiMoviedb.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TrendingList_list__7xRuf\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './TrendingList.module.css'\n\nexport const TrendingList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li className={css.list} key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n\n","import { TrendingList } from 'components/TrendingList/TrendingList.jsx';\nimport { useTrendingList } from '../utils/hooks/useTrendingList';\nimport { Loader } from '../components/Loader/Loader';\n\nconst HomePage = () => {\n  const { trendingMovies, loading, error } = useTrendingList();\n  return (\n    <div>\n      {loading && <Loader />}\n      {error && <p>Something went wrong</p>}\n      {!loading && !error && <TrendingList movies={trendingMovies} />}\n    </div>\n  );\n};\n\nexport default HomePage;\n","import * as API from '../api/apiMoviedb';\nimport { useEffect, useState } from 'react';\n\nexport const useTrendingList = () => {\n  const [trendingMovies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n\n    API.getTrending()\n      .then(ret => {\n        setMovies(ret);\n        setLoading(false);\n      })\n      .catch(err => {\n        setError(err);\n        setLoading(false);\n      });\n  }, []);\n  return { trendingMovies, loading, error };\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=f0775f3489a93860120578755f2ec813';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const searchMovies = async inputValue => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  const movieData = response.data;\n  if (!movieData.poster_path) {\n    movieData.poster_path = defaultImg;\n  }\n  return movieData;\n};\n\nexport const getMovieCredits = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits${API_KEY}&language=en-US`\n  );\n  const credits = response.data.cast.map(\n    ({ name, character, profile_path, id }) => {\n      if (!profile_path) {\n        profile_path = defaultImg;\n      }\n\n      return {\n        name,\n        character,\n        profile_path,\n        id,\n      };\n    });\n\n  return credits;\n};\n\nexport const getMoviesReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n"],"names":["TrendingList","movies","location","useLocation","map","movie","className","css","to","id","state","from","title","useState","trendingMovies","setMovies","loading","setLoading","error","setError","useEffect","API","then","ret","catch","err","useTrendingList","Loader","axios","API_KEY","defaultImg","getTrending","response","data","results","searchMovies","inputValue","getMovieDetails","movieId","movieData","poster_path","getMovieCredits","moviesId","credits","cast","name","character","profile_path","getMoviesReviews","author","content"],"sourceRoot":""}